package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/netlify/swagger-api-client/go/models"
)

// UploadDeployFileReader is a Reader for the UploadDeployFile structure.
type UploadDeployFileReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *UploadDeployFileReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewUploadDeployFileNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewUploadDeployFileDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewUploadDeployFileNoContent creates a UploadDeployFileNoContent with default headers values
func NewUploadDeployFileNoContent() *UploadDeployFileNoContent {
	return &UploadDeployFileNoContent{}
}

/*UploadDeployFileNoContent handles this case with default header values.

No content
*/
type UploadDeployFileNoContent struct {
}

func (o *UploadDeployFileNoContent) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/deploys/{deploy_id}/files/{file_path}][%d] uploadDeployFileNoContent ", 204)
}

func (o *UploadDeployFileNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewUploadDeployFileDefault creates a UploadDeployFileDefault with default headers values
func NewUploadDeployFileDefault(code int) *UploadDeployFileDefault {
	return &UploadDeployFileDefault{
		_statusCode: code,
	}
}

/*UploadDeployFileDefault handles this case with default header values.

error
*/
type UploadDeployFileDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the upload deploy file default response
func (o *UploadDeployFileDefault) Code() int {
	return o._statusCode
}

func (o *UploadDeployFileDefault) Error() string {
	return fmt.Sprintf("[PUT /sites/{site_id}/deploys/{deploy_id}/files/{file_path}][%d] uploadDeployFile default  %+v", o._statusCode, o.Payload)
}

func (o *UploadDeployFileDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
