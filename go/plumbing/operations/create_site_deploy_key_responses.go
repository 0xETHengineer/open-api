// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/netlify/open-api/go/models"
)

// CreateSiteDeployKeyReader is a Reader for the CreateSiteDeployKey structure.
type CreateSiteDeployKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSiteDeployKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewCreateSiteDeployKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewCreateSiteDeployKeyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewCreateSiteDeployKeyOK creates a CreateSiteDeployKeyOK with default headers values
func NewCreateSiteDeployKeyOK() *CreateSiteDeployKeyOK {
	return &CreateSiteDeployKeyOK{}
}

/*CreateSiteDeployKeyOK handles this case with default header values.

OK
*/
type CreateSiteDeployKeyOK struct {
	Payload *models.DeployKey
}

func (o *CreateSiteDeployKeyOK) Error() string {
	return fmt.Sprintf("[POST /sites/{site_id}/deploy_keys][%d] createSiteDeployKeyOK  %+v", 200, o.Payload)
}

func (o *CreateSiteDeployKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DeployKey)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateSiteDeployKeyDefault creates a CreateSiteDeployKeyDefault with default headers values
func NewCreateSiteDeployKeyDefault(code int) *CreateSiteDeployKeyDefault {
	return &CreateSiteDeployKeyDefault{
		_statusCode: code,
	}
}

/*CreateSiteDeployKeyDefault handles this case with default header values.

error
*/
type CreateSiteDeployKeyDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the create site deploy key default response
func (o *CreateSiteDeployKeyDefault) Code() int {
	return o._statusCode
}

func (o *CreateSiteDeployKeyDefault) Error() string {
	return fmt.Sprintf("[POST /sites/{site_id}/deploy_keys][%d] createSiteDeployKey default  %+v", o._statusCode, o.Payload)
}

func (o *CreateSiteDeployKeyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
