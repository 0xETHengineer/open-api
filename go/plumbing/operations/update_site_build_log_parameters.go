package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/netlify/open-api/go/models"
)

// NewUpdateSiteBuildLogParams creates a new UpdateSiteBuildLogParams object
// with the default values initialized.
func NewUpdateSiteBuildLogParams() *UpdateSiteBuildLogParams {
	var ()
	return &UpdateSiteBuildLogParams{}
}

/*UpdateSiteBuildLogParams contains all the parameters to send to the API endpoint
for the update site build log operation typically these are written to a http.Request
*/
type UpdateSiteBuildLogParams struct {

	/*BuildID*/
	BuildID string
	/*Msg*/
	Msg *models.BuildLogMsg
}

// WithBuildID adds the buildId to the update site build log params
func (o *UpdateSiteBuildLogParams) WithBuildID(BuildID string) *UpdateSiteBuildLogParams {
	o.BuildID = BuildID
	return o
}

// WithMsg adds the msg to the update site build log params
func (o *UpdateSiteBuildLogParams) WithMsg(Msg *models.BuildLogMsg) *UpdateSiteBuildLogParams {
	o.Msg = Msg
	return o
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSiteBuildLogParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	var res []error

	// path param build_id
	if err := r.SetPathParam("build_id", o.BuildID); err != nil {
		return err
	}

	if o.Msg == nil {
		o.Msg = new(models.BuildLogMsg)
	}

	if err := r.SetBodyParam(o.Msg); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
