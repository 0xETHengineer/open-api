package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/netlify/swagger-api/models"
)

// GetFormsFormIDSubmissionsReader is a Reader for the GetFormsFormIDSubmissions structure.
type GetFormsFormIDSubmissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetFormsFormIDSubmissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetFormsFormIDSubmissionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetFormsFormIDSubmissionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetFormsFormIDSubmissionsOK creates a GetFormsFormIDSubmissionsOK with default headers values
func NewGetFormsFormIDSubmissionsOK() *GetFormsFormIDSubmissionsOK {
	return &GetFormsFormIDSubmissionsOK{}
}

/*GetFormsFormIDSubmissionsOK handles this case with default header values.

OK
*/
type GetFormsFormIDSubmissionsOK struct {
	Payload []models.Submission
}

func (o *GetFormsFormIDSubmissionsOK) Error() string {
	return fmt.Sprintf("[GET /forms/{form_id}/submissions][%d] getFormsFormIdSubmissionsOK  %+v", 200, o.Payload)
}

func (o *GetFormsFormIDSubmissionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetFormsFormIDSubmissionsDefault creates a GetFormsFormIDSubmissionsDefault with default headers values
func NewGetFormsFormIDSubmissionsDefault(code int) *GetFormsFormIDSubmissionsDefault {
	return &GetFormsFormIDSubmissionsDefault{
		_statusCode: code,
	}
}

/*GetFormsFormIDSubmissionsDefault handles this case with default header values.

error
*/
type GetFormsFormIDSubmissionsDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get forms form ID submissions default response
func (o *GetFormsFormIDSubmissionsDefault) Code() int {
	return o._statusCode
}

func (o *GetFormsFormIDSubmissionsDefault) Error() string {
	return fmt.Sprintf("[GET /forms/{form_id}/submissions][%d] GetFormsFormIDSubmissions default  %+v", o._statusCode, o.Payload)
}

func (o *GetFormsFormIDSubmissionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
